# Name of the application to be registered with the Eureka server
spring.application.name=HotelService

# Port on which the application will listen; 0 means it will choose a random available port
server.port=0

# Instance ID for registering with Eureka, combining variables (app name, unique instance or random value, and port)
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}:${server.port}}

# URL of the Eureka server where the service will register (assuming the Eureka server is on localhost at port 8761)
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# Configures whether the client should register itself with Eureka; true means it will register
eureka.client.register-with-eureka=true

# Configures whether the client should fetch the service registry from Eureka; true means it will
eureka.client.fetch-registry=true

# Configures if the service should use its IP address instead of hostname when registering with Eureka
eureka.instance.prefer-ip-address=true

# Interval in seconds to renew the lease of the instance with Eureka (keeps the connection alive)
eureka.instance.lease-renewal-interval-in-seconds=30

# Duration in seconds after which the instance?s lease expires if it isn?t renewed
eureka.instance.lease-expiration-duration-in-seconds=90

# Connection URL for the PostgreSQL database (database hosted on localhost at port 5432 with name "bookingHotelsAndFligths")
spring.datasource.url=jdbc:postgresql://localhost:5432/bookingHotelsAndFligths

# Username for connecting to the database
spring.datasource.username=user

# Password for connecting to the database
spring.datasource.password=12345678

# PostgreSQL JDBC driver class
spring.datasource.driver-class-name=org.postgresql.Driver

# Configures SQL initialization mode to always run (used for setting up or populating the database at app startup)
spring.sql.init.mode=always

# Configures HikariCP (Spring?s connection pool) to set a connection timeout of 20 seconds
spring.datasource.hikari.connection-timeout=20000

# Configures HikariCP to allow a maximum of 5 connections in the connection pool
spring.datasource.hikari.maximum-pool-size=5

# Specifies the Hibernate dialect to use for PostgreSQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Sets the Hibernate SQL logging level to DEBUG to show executed SQL queries
logging.level.org.hibernate.SQL=DEBUG

# Sets the logging level for SQL parameter values to TRACE for detailed parameter information
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
